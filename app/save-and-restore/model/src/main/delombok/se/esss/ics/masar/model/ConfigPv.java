// Generated by delombok at Fri Apr 05 13:27:37 CEST 2019
/** 
 * Copyright (C) 2018 European Spallation Source ERIC.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.phoebus.applications.saveandrestore.model;

import java.util.Objects;
import io.swagger.annotations.ApiModelProperty;

/**
 * Class encapsulating data to describe a PV subject to a save operation. A read-back PV name
 * is optionally associated with the PV name. A PV record is uniquely identified by both the PV name
 * and the read-back PV name.
 * @author georgweiss
 * Created 1 Oct 2018
 */
public class ConfigPv implements Comparable<ConfigPv> {
	@ApiModelProperty(required = false, value = "Database id of the config PV, defined by the server", allowEmptyValue = true)
	private int id;
	@ApiModelProperty(required = true, value = "The fully qualified EPICS PV name.")
	private String pvName;
	@ApiModelProperty(required = true, value = "The fully qualified EPICS readback PV name. Optional.")
	private String readbackPvName;
	@ApiModelProperty(required = true, value = "A read only PV will be excluded from restore operation. Default is false.")
	private boolean readOnly;
	/**
	 * The default provider is {@link Provider#ca}.
	 */
	@ApiModelProperty(required = false, value = "Defaults to ca (=channel access)", allowEmptyValue = true)
	private Provider provider;

	/*
	 * This <code>equals</code> method intentionally disregards the read-back PV name as
	 * a configuration PV record is "identified" through the PV name. Also, the read-back name is
	 * optional.
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object other) {
		if (other instanceof ConfigPv) {
			ConfigPv otherConfigPv = (ConfigPv) other;
			return Objects.equals(pvName, otherConfigPv.getPvName()) && Objects.equals(readbackPvName, otherConfigPv.getReadbackPvName());
		}
		return false;
	}

	@Override
	public int hashCode() {
		if (readbackPvName != null && !readbackPvName.isEmpty()) {
			return (pvName + readbackPvName).hashCode();
		}
		return pvName.hashCode();
	}

	@Override
	public String toString() {
		String toString = new StringBuffer().append("PV name=").append(pvName).append(", provider=").append(provider.toString()).toString();
		if (readbackPvName != null && !readbackPvName.isEmpty()) {
			toString += ", read-back PV name=" + readbackPvName;
		}
		return toString;
	}

	/**
	 * Comparison is simply a comparison of the {@code pvName} field.
	 * @param other The object to compare to.
	 * @return The comparison result, typically used to sort list of {@link ConfigPv}s by name
	 */
	@Override
	public int compareTo(ConfigPv other) {
		return pvName.compareTo(other.getPvName());
	}

	@java.lang.SuppressWarnings("all")
	private static boolean $default$readOnly() {
		return false;
	}

	@java.lang.SuppressWarnings("all")
	private static Provider $default$provider() {
		return Provider.ca;
	}


	@java.lang.SuppressWarnings("all")
	public static class ConfigPvBuilder {
		@java.lang.SuppressWarnings("all")
		private int id;
		@java.lang.SuppressWarnings("all")
		private String pvName;
		@java.lang.SuppressWarnings("all")
		private String readbackPvName;
		@java.lang.SuppressWarnings("all")
		private boolean readOnly$set;
		@java.lang.SuppressWarnings("all")
		private boolean readOnly;
		@java.lang.SuppressWarnings("all")
		private boolean provider$set;
		@java.lang.SuppressWarnings("all")
		private Provider provider;

		@java.lang.SuppressWarnings("all")
		ConfigPvBuilder() {
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPvBuilder id(final int id) {
			this.id = id;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPvBuilder pvName(final String pvName) {
			this.pvName = pvName;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPvBuilder readbackPvName(final String readbackPvName) {
			this.readbackPvName = readbackPvName;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPvBuilder readOnly(final boolean readOnly) {
			this.readOnly = readOnly;
			readOnly$set = true;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPvBuilder provider(final Provider provider) {
			this.provider = provider;
			provider$set = true;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public ConfigPv build() {
			boolean readOnly = this.readOnly;
			if (!readOnly$set) readOnly = ConfigPv.$default$readOnly();
			Provider provider = this.provider;
			if (!provider$set) provider = ConfigPv.$default$provider();
			return new ConfigPv(id, pvName, readbackPvName, readOnly, provider);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public java.lang.String toString() {
			return "ConfigPv.ConfigPvBuilder(id=" + this.id + ", pvName=" + this.pvName + ", readbackPvName=" + this.readbackPvName + ", readOnly=" + this.readOnly + ", provider=" + this.provider + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	public static ConfigPvBuilder builder() {
		return new ConfigPvBuilder();
	}

	@java.lang.SuppressWarnings("all")
	public int getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public String getPvName() {
		return this.pvName;
	}

	@java.lang.SuppressWarnings("all")
	public String getReadbackPvName() {
		return this.readbackPvName;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isReadOnly() {
		return this.readOnly;
	}

	/**
	 * The default provider is {@link Provider#ca}.
	 */
	@java.lang.SuppressWarnings("all")
	public Provider getProvider() {
		return this.provider;
	}

	@java.lang.SuppressWarnings("all")
	public void setId(final int id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	public void setPvName(final String pvName) {
		this.pvName = pvName;
	}

	@java.lang.SuppressWarnings("all")
	public void setReadbackPvName(final String readbackPvName) {
		this.readbackPvName = readbackPvName;
	}

	@java.lang.SuppressWarnings("all")
	public void setReadOnly(final boolean readOnly) {
		this.readOnly = readOnly;
	}

	/**
	 * The default provider is {@link Provider#ca}.
	 */
	@java.lang.SuppressWarnings("all")
	public void setProvider(final Provider provider) {
		this.provider = provider;
	}

	@java.lang.SuppressWarnings("all")
	public ConfigPv() {
		this.readOnly = ConfigPv.$default$readOnly();
		this.provider = ConfigPv.$default$provider();
	}

	@java.lang.SuppressWarnings("all")
	public ConfigPv(final int id, final String pvName, final String readbackPvName, final boolean readOnly, final Provider provider) {
		this.id = id;
		this.pvName = pvName;
		this.readbackPvName = readbackPvName;
		this.readOnly = readOnly;
		this.provider = provider;
	}
}
