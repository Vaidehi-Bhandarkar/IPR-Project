// Generated by delombok at Fri Apr 05 13:27:37 CEST 2019
/*
 * Copyright (C) 2018 European Spallation Source ERIC.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.phoebus.applications.saveandrestore.model;

import java.util.List;

/**
 * @author georgweiss
 * Created 20 Mar 2019
 */
public class UpdateConfigHolder {
	private Node config;
	private List<ConfigPv> configPvList;


	@java.lang.SuppressWarnings("all")
	public static class UpdateConfigHolderBuilder {
		@java.lang.SuppressWarnings("all")
		private Node config;
		@java.lang.SuppressWarnings("all")
		private List<ConfigPv> configPvList;

		@java.lang.SuppressWarnings("all")
		UpdateConfigHolderBuilder() {
		}

		@java.lang.SuppressWarnings("all")
		public UpdateConfigHolderBuilder config(final Node config) {
			this.config = config;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public UpdateConfigHolderBuilder configPvList(final List<ConfigPv> configPvList) {
			this.configPvList = configPvList;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public UpdateConfigHolder build() {
			return new UpdateConfigHolder(config, configPvList);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public java.lang.String toString() {
			return "UpdateConfigHolder.UpdateConfigHolderBuilder(config=" + this.config + ", configPvList=" + this.configPvList + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	public static UpdateConfigHolderBuilder builder() {
		return new UpdateConfigHolderBuilder();
	}

	@java.lang.SuppressWarnings("all")
	public Node getConfig() {
		return this.config;
	}

	@java.lang.SuppressWarnings("all")
	public List<ConfigPv> getConfigPvList() {
		return this.configPvList;
	}

	@java.lang.SuppressWarnings("all")
	public void setConfig(final Node config) {
		this.config = config;
	}

	@java.lang.SuppressWarnings("all")
	public void setConfigPvList(final List<ConfigPv> configPvList) {
		this.configPvList = configPvList;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof UpdateConfigHolder)) return false;
		final UpdateConfigHolder other = (UpdateConfigHolder) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$config = this.getConfig();
		final java.lang.Object other$config = other.getConfig();
		if (this$config == null ? other$config != null : !this$config.equals(other$config)) return false;
		final java.lang.Object this$configPvList = this.getConfigPvList();
		final java.lang.Object other$configPvList = other.getConfigPvList();
		if (this$configPvList == null ? other$configPvList != null : !this$configPvList.equals(other$configPvList)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof UpdateConfigHolder;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $config = this.getConfig();
		result = result * PRIME + ($config == null ? 43 : $config.hashCode());
		final java.lang.Object $configPvList = this.getConfigPvList();
		result = result * PRIME + ($configPvList == null ? 43 : $configPvList.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "UpdateConfigHolder(config=" + this.getConfig() + ", configPvList=" + this.getConfigPvList() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public UpdateConfigHolder() {
	}

	@java.lang.SuppressWarnings("all")
	public UpdateConfigHolder(final Node config, final List<ConfigPv> configPvList) {
		this.config = config;
		this.configPvList = configPvList;
	}
}
